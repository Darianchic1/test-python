# -*- coding: utf-8 -*-
"""Shapes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UHSbNJKTgUBfdjcb4JKI7cHNRzKA8YVL
"""

class Shape:
  def __init__(self, position=(), scale=0, color=0):
    self.__position = position
    self.__scale = scale
    self.__color = color

  def info(self):
    print("Position", self.__position, "\nScale", self.__scale, "\nColor", self.__color)

  def area(self):
    print('Площадь фигуры')

  def get_position(self):
    return self.__position
    
  def set_position(self, x):
    self.__position = x
  
  def get_scale(self, x):
    return self.__scale
    
  def set_scale(self, x):
    self.__scale = x
    
  def get_color(self, x):
    return self.__color
    
  def set_color(self, x):
    self.__color = x

class Rectangle(Shape):
  def __init__(self, side1=0, side2=0):

    super().__init__()
    self.__side1 = 0
    self.__side2 = 0
    
  def get_side1(self):
    return self.__side1
    
  def set_side1(self, x):
    self.__side1 = x
  
  def get_side2(self, x):
    return self.__side2
    
  def set_side2(self, x):
    self.__side2 = x

  def info(self):
    super().info()
    print("Side1", self.__side1, "\nSide2", self.__side2)

  def area(self):
    super().area()
    S = self.__side1 * self.__side2
    print(S)

class Trapezoid(Shape):
  def __init__(self, side1=0, side2=0, h=0):

    super().__init__()
    self.__side1 = 0
    self.__side2 = 0
    self.__h = 0

  def get_side1(self):
    return self.__side1
    
  def set_side1(self, x):
    self.__side1 = x
  
  def get_side2(self, x):
    return self.__side2
    
  def set_side2(self, x):
    self.__side2 = x
    
  def get_h(self):
    return self.__h
    
  def set_h(self, x):
    self.__h = x

  def info(self):
    super().info()
    print("Side1", self.__side1, "\nSide2", self.__side2, "\nH", self.__h)

  def area(self):
    super().area()
    S = (self.__side1 + self.__side2)*0.5*self.__h
    print(S)

class Circle(Shape):
  def __init__(self, radius=0):

    super().__init__()
    self.__radius = 0

  def get_radius(self):
    return self.__radius
    
  def set_radius(self, x):
    self.__radius = x

  def info(self):
    super().info()
    print("Radius", self.__radius)

  def area(self):
    super().area()
    S = 3.14 * self.__radius**2
    print(S)

my_shape = Rectangle()
my_shape.set_position([3, 5])
my_shape.set_scale(3)
my_shape.set_color("blue")
my_shape.set_side1(14)
my_shape.set_side2(45)
my_shape.info()
my_shape.area()

my_shape = Trapezoid()
my_shape.set_position([34, 6])
my_shape.set_scale(3)
my_shape.set_color("red")
my_shape.set_side1(11)
my_shape.set_side2(32)
my_shape.set_h(10)
my_shape.info()
my_shape.area()

my_shape = Circle()
my_shape.set_position([54,23])
my_shape.set_scale(2)
my_shape.set_color("yellow")
my_shape.set_radius(12)
my_shape.info()
my_shape.area()